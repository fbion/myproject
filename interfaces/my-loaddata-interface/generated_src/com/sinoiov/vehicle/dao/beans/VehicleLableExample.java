package com.sinoiov.vehicle.dao.beans;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VehicleLableExample implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public VehicleLableExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	protected VehicleLableExample(VehicleLableExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public static String tableName() {
		return "TB_VEHICLE_LABLE";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public static String daoInterface() {
		return "com.sinoiov.vehicle.dao.VehicleLableDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_VEHICLE_LABLE
	 * @abatorgenerated  Mon Jan 11 19:46:59 CST 2016
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andVIdIsNull() {
			addCriterion("V_ID is null");
			return this;
		}

		public Criteria andVIdIsNotNull() {
			addCriterion("V_ID is not null");
			return this;
		}

		public Criteria andVIdEqualTo(String value) {
			addCriterion("V_ID =", value, "vId");
			return this;
		}

		public Criteria andVIdNotEqualTo(String value) {
			addCriterion("V_ID <>", value, "vId");
			return this;
		}

		public Criteria andVIdGreaterThan(String value) {
			addCriterion("V_ID >", value, "vId");
			return this;
		}

		public Criteria andVIdGreaterThanOrEqualTo(String value) {
			addCriterion("V_ID >=", value, "vId");
			return this;
		}

		public Criteria andVIdLessThan(String value) {
			addCriterion("V_ID <", value, "vId");
			return this;
		}

		public Criteria andVIdLessThanOrEqualTo(String value) {
			addCriterion("V_ID <=", value, "vId");
			return this;
		}

		public Criteria andVIdLike(String value) {
			addCriterion("V_ID like", value, "vId");
			return this;
		}

		public Criteria andVIdNotLike(String value) {
			addCriterion("V_ID not like", value, "vId");
			return this;
		}

		public Criteria andVIdIn(List values) {
			addCriterion("V_ID in", values, "vId");
			return this;
		}

		public Criteria andVIdNotIn(List values) {
			addCriterion("V_ID not in", values, "vId");
			return this;
		}

		public Criteria andVIdBetween(String value1, String value2) {
			addCriterion("V_ID between", value1, value2, "vId");
			return this;
		}

		public Criteria andVIdNotBetween(String value1, String value2) {
			addCriterion("V_ID not between", value1, value2, "vId");
			return this;
		}

		public Criteria andActivityAreasIsNull() {
			addCriterion("ACTIVITY_AREAS is null");
			return this;
		}

		public Criteria andActivityAreasIsNotNull() {
			addCriterion("ACTIVITY_AREAS is not null");
			return this;
		}

		public Criteria andActivityAreasEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS =", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasNotEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS <>", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasGreaterThan(String value) {
			addCriterion("ACTIVITY_AREAS >", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasGreaterThanOrEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS >=", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasLessThan(String value) {
			addCriterion("ACTIVITY_AREAS <", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasLessThanOrEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS <=", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasLike(String value) {
			addCriterion("ACTIVITY_AREAS like", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasNotLike(String value) {
			addCriterion("ACTIVITY_AREAS not like", value, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasIn(List values) {
			addCriterion("ACTIVITY_AREAS in", values, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasNotIn(List values) {
			addCriterion("ACTIVITY_AREAS not in", values, "activityAreas");
			return this;
		}

		public Criteria andActivityAreasBetween(String value1, String value2) {
			addCriterion("ACTIVITY_AREAS between", value1, value2,
					"activityAreas");
			return this;
		}

		public Criteria andActivityAreasNotBetween(String value1, String value2) {
			addCriterion("ACTIVITY_AREAS not between", value1, value2,
					"activityAreas");
			return this;
		}

		public Criteria andActivityAreasCodeIsNull() {
			addCriterion("ACTIVITY_AREAS_CODE is null");
			return this;
		}

		public Criteria andActivityAreasCodeIsNotNull() {
			addCriterion("ACTIVITY_AREAS_CODE is not null");
			return this;
		}

		public Criteria andActivityAreasCodeEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS_CODE =", value, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeNotEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS_CODE <>", value, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeGreaterThan(String value) {
			addCriterion("ACTIVITY_AREAS_CODE >", value, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeGreaterThanOrEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS_CODE >=", value, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeLessThan(String value) {
			addCriterion("ACTIVITY_AREAS_CODE <", value, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeLessThanOrEqualTo(String value) {
			addCriterion("ACTIVITY_AREAS_CODE <=", value, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeLike(String value) {
			addCriterion("ACTIVITY_AREAS_CODE like", value, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeNotLike(String value) {
			addCriterion("ACTIVITY_AREAS_CODE not like", value,
					"activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeIn(List values) {
			addCriterion("ACTIVITY_AREAS_CODE in", values, "activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeNotIn(List values) {
			addCriterion("ACTIVITY_AREAS_CODE not in", values,
					"activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeBetween(String value1, String value2) {
			addCriterion("ACTIVITY_AREAS_CODE between", value1, value2,
					"activityAreasCode");
			return this;
		}

		public Criteria andActivityAreasCodeNotBetween(String value1,
				String value2) {
			addCriterion("ACTIVITY_AREAS_CODE not between", value1, value2,
					"activityAreasCode");
			return this;
		}

		public Criteria andActivityTimeIsNull() {
			addCriterion("ACTIVITY_TIME is null");
			return this;
		}

		public Criteria andActivityTimeIsNotNull() {
			addCriterion("ACTIVITY_TIME is not null");
			return this;
		}

		public Criteria andActivityTimeEqualTo(String value) {
			addCriterion("ACTIVITY_TIME =", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeNotEqualTo(String value) {
			addCriterion("ACTIVITY_TIME <>", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeGreaterThan(String value) {
			addCriterion("ACTIVITY_TIME >", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeGreaterThanOrEqualTo(String value) {
			addCriterion("ACTIVITY_TIME >=", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeLessThan(String value) {
			addCriterion("ACTIVITY_TIME <", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeLessThanOrEqualTo(String value) {
			addCriterion("ACTIVITY_TIME <=", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeLike(String value) {
			addCriterion("ACTIVITY_TIME like", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeNotLike(String value) {
			addCriterion("ACTIVITY_TIME not like", value, "activityTime");
			return this;
		}

		public Criteria andActivityTimeIn(List values) {
			addCriterion("ACTIVITY_TIME in", values, "activityTime");
			return this;
		}

		public Criteria andActivityTimeNotIn(List values) {
			addCriterion("ACTIVITY_TIME not in", values, "activityTime");
			return this;
		}

		public Criteria andActivityTimeBetween(String value1, String value2) {
			addCriterion("ACTIVITY_TIME between", value1, value2,
					"activityTime");
			return this;
		}

		public Criteria andActivityTimeNotBetween(String value1, String value2) {
			addCriterion("ACTIVITY_TIME not between", value1, value2,
					"activityTime");
			return this;
		}

		public Criteria andBusinessTimeIsNull() {
			addCriterion("BUSINESS_TIME is null");
			return this;
		}

		public Criteria andBusinessTimeIsNotNull() {
			addCriterion("BUSINESS_TIME is not null");
			return this;
		}

		public Criteria andBusinessTimeEqualTo(String value) {
			addCriterion("BUSINESS_TIME =", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeNotEqualTo(String value) {
			addCriterion("BUSINESS_TIME <>", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeGreaterThan(String value) {
			addCriterion("BUSINESS_TIME >", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeGreaterThanOrEqualTo(String value) {
			addCriterion("BUSINESS_TIME >=", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeLessThan(String value) {
			addCriterion("BUSINESS_TIME <", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeLessThanOrEqualTo(String value) {
			addCriterion("BUSINESS_TIME <=", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeLike(String value) {
			addCriterion("BUSINESS_TIME like", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeNotLike(String value) {
			addCriterion("BUSINESS_TIME not like", value, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeIn(List values) {
			addCriterion("BUSINESS_TIME in", values, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeNotIn(List values) {
			addCriterion("BUSINESS_TIME not in", values, "businessTime");
			return this;
		}

		public Criteria andBusinessTimeBetween(String value1, String value2) {
			addCriterion("BUSINESS_TIME between", value1, value2,
					"businessTime");
			return this;
		}

		public Criteria andBusinessTimeNotBetween(String value1, String value2) {
			addCriterion("BUSINESS_TIME not between", value1, value2,
					"businessTime");
			return this;
		}
	}
}