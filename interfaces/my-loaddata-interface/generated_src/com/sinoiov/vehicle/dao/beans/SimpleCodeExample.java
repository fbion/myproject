package com.sinoiov.vehicle.dao.beans;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SimpleCodeExample implements Serializable {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	protected List oredCriteria;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	protected int skipNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	protected int endNum;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	protected int limitNum;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public SimpleCodeExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	protected SimpleCodeExample(SimpleCodeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public static String tableName() {
		return "TB_SIMPLE_CODE";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public static String daoInterface() {
		return "com.sinoiov.vehicle.dao.SimpleCodeDAO";
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public void setSkipNum(int skipNum) {
		this.skipNum = skipNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public int getSkipNum() {
		return this.skipNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public void setEndNum(int endNum) {
		this.endNum = endNum;
		this.limitNum = this.endNum - this.skipNum - 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public int getEndNum() {
		return this.endNum;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public void setLimitNum(int limitNum) {
		this.limitNum = limitNum;
		this.endNum = this.skipNum + this.limitNum + 1;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public int getLimitNum() {
		return this.limitNum;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table TB_SIMPLE_CODE
	 * @abatorgenerated  Sun Jan 10 19:24:12 CST 2016
	 */
	public static class Criteria implements Serializable {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andTypeCodeIsNull() {
			addCriterion("TYPE_CODE is null");
			return this;
		}

		public Criteria andTypeCodeIsNotNull() {
			addCriterion("TYPE_CODE is not null");
			return this;
		}

		public Criteria andTypeCodeEqualTo(String value) {
			addCriterion("TYPE_CODE =", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeNotEqualTo(String value) {
			addCriterion("TYPE_CODE <>", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeGreaterThan(String value) {
			addCriterion("TYPE_CODE >", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeGreaterThanOrEqualTo(String value) {
			addCriterion("TYPE_CODE >=", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeLessThan(String value) {
			addCriterion("TYPE_CODE <", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeLessThanOrEqualTo(String value) {
			addCriterion("TYPE_CODE <=", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeLike(String value) {
			addCriterion("TYPE_CODE like", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeNotLike(String value) {
			addCriterion("TYPE_CODE not like", value, "typeCode");
			return this;
		}

		public Criteria andTypeCodeIn(List values) {
			addCriterion("TYPE_CODE in", values, "typeCode");
			return this;
		}

		public Criteria andTypeCodeNotIn(List values) {
			addCriterion("TYPE_CODE not in", values, "typeCode");
			return this;
		}

		public Criteria andTypeCodeBetween(String value1, String value2) {
			addCriterion("TYPE_CODE between", value1, value2, "typeCode");
			return this;
		}

		public Criteria andTypeCodeNotBetween(String value1, String value2) {
			addCriterion("TYPE_CODE not between", value1, value2, "typeCode");
			return this;
		}

		public Criteria andTypeNameIsNull() {
			addCriterion("TYPE_NAME is null");
			return this;
		}

		public Criteria andTypeNameIsNotNull() {
			addCriterion("TYPE_NAME is not null");
			return this;
		}

		public Criteria andTypeNameEqualTo(String value) {
			addCriterion("TYPE_NAME =", value, "typeName");
			return this;
		}

		public Criteria andTypeNameNotEqualTo(String value) {
			addCriterion("TYPE_NAME <>", value, "typeName");
			return this;
		}

		public Criteria andTypeNameGreaterThan(String value) {
			addCriterion("TYPE_NAME >", value, "typeName");
			return this;
		}

		public Criteria andTypeNameGreaterThanOrEqualTo(String value) {
			addCriterion("TYPE_NAME >=", value, "typeName");
			return this;
		}

		public Criteria andTypeNameLessThan(String value) {
			addCriterion("TYPE_NAME <", value, "typeName");
			return this;
		}

		public Criteria andTypeNameLessThanOrEqualTo(String value) {
			addCriterion("TYPE_NAME <=", value, "typeName");
			return this;
		}

		public Criteria andTypeNameLike(String value) {
			addCriterion("TYPE_NAME like", value, "typeName");
			return this;
		}

		public Criteria andTypeNameNotLike(String value) {
			addCriterion("TYPE_NAME not like", value, "typeName");
			return this;
		}

		public Criteria andTypeNameIn(List values) {
			addCriterion("TYPE_NAME in", values, "typeName");
			return this;
		}

		public Criteria andTypeNameNotIn(List values) {
			addCriterion("TYPE_NAME not in", values, "typeName");
			return this;
		}

		public Criteria andTypeNameBetween(String value1, String value2) {
			addCriterion("TYPE_NAME between", value1, value2, "typeName");
			return this;
		}

		public Criteria andTypeNameNotBetween(String value1, String value2) {
			addCriterion("TYPE_NAME not between", value1, value2, "typeName");
			return this;
		}

		public Criteria andCodeIsNull() {
			addCriterion("CODE is null");
			return this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("CODE is not null");
			return this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("CODE =", value, "code");
			return this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("CODE <>", value, "code");
			return this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("CODE >", value, "code");
			return this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("CODE >=", value, "code");
			return this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("CODE <", value, "code");
			return this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("CODE <=", value, "code");
			return this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("CODE like", value, "code");
			return this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("CODE not like", value, "code");
			return this;
		}

		public Criteria andCodeIn(List values) {
			addCriterion("CODE in", values, "code");
			return this;
		}

		public Criteria andCodeNotIn(List values) {
			addCriterion("CODE not in", values, "code");
			return this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("CODE between", value1, value2, "code");
			return this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("CODE not between", value1, value2, "code");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("NAME is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("NAME is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("NAME =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("NAME <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("NAME >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("NAME >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("NAME <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("NAME <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("NAME like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("NAME not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List values) {
			addCriterion("NAME in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List values) {
			addCriterion("NAME not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("NAME between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("NAME not between", value1, value2, "name");
			return this;
		}

		public Criteria andLevelIsNull() {
			addCriterion("LEVEL is null");
			return this;
		}

		public Criteria andLevelIsNotNull() {
			addCriterion("LEVEL is not null");
			return this;
		}

		public Criteria andLevelEqualTo(String value) {
			addCriterion("LEVEL =", value, "level");
			return this;
		}

		public Criteria andLevelNotEqualTo(String value) {
			addCriterion("LEVEL <>", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThan(String value) {
			addCriterion("LEVEL >", value, "level");
			return this;
		}

		public Criteria andLevelGreaterThanOrEqualTo(String value) {
			addCriterion("LEVEL >=", value, "level");
			return this;
		}

		public Criteria andLevelLessThan(String value) {
			addCriterion("LEVEL <", value, "level");
			return this;
		}

		public Criteria andLevelLessThanOrEqualTo(String value) {
			addCriterion("LEVEL <=", value, "level");
			return this;
		}

		public Criteria andLevelLike(String value) {
			addCriterion("LEVEL like", value, "level");
			return this;
		}

		public Criteria andLevelNotLike(String value) {
			addCriterion("LEVEL not like", value, "level");
			return this;
		}

		public Criteria andLevelIn(List values) {
			addCriterion("LEVEL in", values, "level");
			return this;
		}

		public Criteria andLevelNotIn(List values) {
			addCriterion("LEVEL not in", values, "level");
			return this;
		}

		public Criteria andLevelBetween(String value1, String value2) {
			addCriterion("LEVEL between", value1, value2, "level");
			return this;
		}

		public Criteria andLevelNotBetween(String value1, String value2) {
			addCriterion("LEVEL not between", value1, value2, "level");
			return this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return this;
		}

		public Criteria andRemarkIn(List values) {
			addCriterion("REMARK in", values, "remark");
			return this;
		}

		public Criteria andRemarkNotIn(List values) {
			addCriterion("REMARK not in", values, "remark");
			return this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return this;
		}

		public Criteria andPidIsNull() {
			addCriterion("PID is null");
			return this;
		}

		public Criteria andPidIsNotNull() {
			addCriterion("PID is not null");
			return this;
		}

		public Criteria andPidEqualTo(String value) {
			addCriterion("PID =", value, "pid");
			return this;
		}

		public Criteria andPidNotEqualTo(String value) {
			addCriterion("PID <>", value, "pid");
			return this;
		}

		public Criteria andPidGreaterThan(String value) {
			addCriterion("PID >", value, "pid");
			return this;
		}

		public Criteria andPidGreaterThanOrEqualTo(String value) {
			addCriterion("PID >=", value, "pid");
			return this;
		}

		public Criteria andPidLessThan(String value) {
			addCriterion("PID <", value, "pid");
			return this;
		}

		public Criteria andPidLessThanOrEqualTo(String value) {
			addCriterion("PID <=", value, "pid");
			return this;
		}

		public Criteria andPidLike(String value) {
			addCriterion("PID like", value, "pid");
			return this;
		}

		public Criteria andPidNotLike(String value) {
			addCriterion("PID not like", value, "pid");
			return this;
		}

		public Criteria andPidIn(List values) {
			addCriterion("PID in", values, "pid");
			return this;
		}

		public Criteria andPidNotIn(List values) {
			addCriterion("PID not in", values, "pid");
			return this;
		}

		public Criteria andPidBetween(String value1, String value2) {
			addCriterion("PID between", value1, value2, "pid");
			return this;
		}

		public Criteria andPidNotBetween(String value1, String value2) {
			addCriterion("PID not between", value1, value2, "pid");
			return this;
		}
	}
}