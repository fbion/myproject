package com.ctfo.account.dao.beans;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UnbalanceDetailWithThirdPartyAccountExampleExtended implements Serializable {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    private static final long serialVersionUID = 1L;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected List oredCriteria;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected String selectedField;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected int skipNum;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected int endNum;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected int limitNum;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public UnbalanceDetailWithThirdPartyAccountExampleExtended() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected UnbalanceDetailWithThirdPartyAccountExampleExtended(UnbalanceDetailWithThirdPartyAccountExampleExtended example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public void setSelectedField(String selectedField) {
        this.selectedField = selectedField;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public String getSelectedField() {
        return selectedField;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public static String tableName() {
        return "TB_UPP_CHECK_ACC_DIVERGENCE";
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public static String daoInterface() {
        return "com.ctfo.upp.accountservice.account.dao.UnbalanceDetailWithThirdPartyAccountDAO";
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public void setSkipNum(int skipNum) {
        this.skipNum = skipNum;
        this.endNum = this.skipNum + this.limitNum +1;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public int getSkipNum() {
        return this.skipNum;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public void setEndNum(int endNum) {
        this.endNum = endNum;
        this.limitNum = this.endNum - this.skipNum -1;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public int getEndNum() {
        return this.endNum;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public void setLimitNum(int limitNum) {
        this.limitNum = limitNum;
        this.endNum = this.skipNum + this.limitNum +1;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public int getLimitNum() {
        return this.limitNum;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
     *
     * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
     */
    public static class Criteria implements Serializable {
        /**
         * This field was generated by Abator for iBATIS.
         * This field corresponds to the database table UPP.TB_UPP_CHECK_ACC_DIVERGENCE
         *
         * @abatorgenerated Mon Nov 03 13:56:48 CST 2014
         */
        private static final long serialVersionUID = 1L;

        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("ACCOUNT_ID is null");
            return this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("ACCOUNT_ID is not null");
            return this;
        }

        public Criteria andAccountIdEqualTo(String value) {
            addCriterion("ACCOUNT_ID =", value, "accountId");
            return this;
        }

        public Criteria andAccountIdNotEqualTo(String value) {
            addCriterion("ACCOUNT_ID <>", value, "accountId");
            return this;
        }

        public Criteria andAccountIdGreaterThan(String value) {
            addCriterion("ACCOUNT_ID >", value, "accountId");
            return this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_ID >=", value, "accountId");
            return this;
        }

        public Criteria andAccountIdLessThan(String value) {
            addCriterion("ACCOUNT_ID <", value, "accountId");
            return this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_ID <=", value, "accountId");
            return this;
        }

        public Criteria andAccountIdLike(String value) {
            addCriterion("ACCOUNT_ID like", value, "accountId");
            return this;
        }

        public Criteria andAccountIdNotLike(String value) {
            addCriterion("ACCOUNT_ID not like", value, "accountId");
            return this;
        }

        public Criteria andAccountIdIn(List values) {
            addCriterion("ACCOUNT_ID in", values, "accountId");
            return this;
        }

        public Criteria andAccountIdNotIn(List values) {
            addCriterion("ACCOUNT_ID not in", values, "accountId");
            return this;
        }

        public Criteria andAccountIdBetween(String value1, String value2) {
            addCriterion("ACCOUNT_ID between", value1, value2, "accountId");
            return this;
        }

        public Criteria andAccountIdNotBetween(String value1, String value2) {
            addCriterion("ACCOUNT_ID not between", value1, value2, "accountId");
            return this;
        }

        public Criteria andAccountNoIsNull() {
            addCriterion("ACCOUNT_NO is null");
            return this;
        }

        public Criteria andAccountNoIsNotNull() {
            addCriterion("ACCOUNT_NO is not null");
            return this;
        }

        public Criteria andAccountNoEqualTo(String value) {
            addCriterion("ACCOUNT_NO =", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoNotEqualTo(String value) {
            addCriterion("ACCOUNT_NO <>", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoGreaterThan(String value) {
            addCriterion("ACCOUNT_NO >", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_NO >=", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoLessThan(String value) {
            addCriterion("ACCOUNT_NO <", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_NO <=", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoLike(String value) {
            addCriterion("ACCOUNT_NO like", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoNotLike(String value) {
            addCriterion("ACCOUNT_NO not like", value, "accountNo");
            return this;
        }

        public Criteria andAccountNoIn(List values) {
            addCriterion("ACCOUNT_NO in", values, "accountNo");
            return this;
        }

        public Criteria andAccountNoNotIn(List values) {
            addCriterion("ACCOUNT_NO not in", values, "accountNo");
            return this;
        }

        public Criteria andAccountNoBetween(String value1, String value2) {
            addCriterion("ACCOUNT_NO between", value1, value2, "accountNo");
            return this;
        }

        public Criteria andAccountNoNotBetween(String value1, String value2) {
            addCriterion("ACCOUNT_NO not between", value1, value2, "accountNo");
            return this;
        }

        public Criteria andCheckAccountTimeIsNull() {
            addCriterion("CHECK_ACCOUNT_TIME is null");
            return this;
        }

        public Criteria andCheckAccountTimeIsNotNull() {
            addCriterion("CHECK_ACCOUNT_TIME is not null");
            return this;
        }

        public Criteria andCheckAccountTimeEqualTo(Long value) {
            addCriterion("CHECK_ACCOUNT_TIME =", value, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeNotEqualTo(Long value) {
            addCriterion("CHECK_ACCOUNT_TIME <>", value, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeGreaterThan(Long value) {
            addCriterion("CHECK_ACCOUNT_TIME >", value, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("CHECK_ACCOUNT_TIME >=", value, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeLessThan(Long value) {
            addCriterion("CHECK_ACCOUNT_TIME <", value, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeLessThanOrEqualTo(Long value) {
            addCriterion("CHECK_ACCOUNT_TIME <=", value, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeIn(List values) {
            addCriterion("CHECK_ACCOUNT_TIME in", values, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeNotIn(List values) {
            addCriterion("CHECK_ACCOUNT_TIME not in", values, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeBetween(Long value1, Long value2) {
            addCriterion("CHECK_ACCOUNT_TIME between", value1, value2, "checkAccountTime");
            return this;
        }

        public Criteria andCheckAccountTimeNotBetween(Long value1, Long value2) {
            addCriterion("CHECK_ACCOUNT_TIME not between", value1, value2, "checkAccountTime");
            return this;
        }

        public Criteria andAccountDateIsNull() {
            addCriterion("ACCOUNT_DATE is null");
            return this;
        }

        public Criteria andAccountDateIsNotNull() {
            addCriterion("ACCOUNT_DATE is not null");
            return this;
        }

        public Criteria andAccountDateEqualTo(String value) {
            addCriterion("ACCOUNT_DATE =", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateNotEqualTo(String value) {
            addCriterion("ACCOUNT_DATE <>", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateGreaterThan(String value) {
            addCriterion("ACCOUNT_DATE >", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_DATE >=", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateLessThan(String value) {
            addCriterion("ACCOUNT_DATE <", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_DATE <=", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateLike(String value) {
            addCriterion("ACCOUNT_DATE like", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateNotLike(String value) {
            addCriterion("ACCOUNT_DATE not like", value, "accountDate");
            return this;
        }

        public Criteria andAccountDateIn(List values) {
            addCriterion("ACCOUNT_DATE in", values, "accountDate");
            return this;
        }

        public Criteria andAccountDateNotIn(List values) {
            addCriterion("ACCOUNT_DATE not in", values, "accountDate");
            return this;
        }

        public Criteria andAccountDateBetween(String value1, String value2) {
            addCriterion("ACCOUNT_DATE between", value1, value2, "accountDate");
            return this;
        }

        public Criteria andAccountDateNotBetween(String value1, String value2) {
            addCriterion("ACCOUNT_DATE not between", value1, value2, "accountDate");
            return this;
        }

        public Criteria andFailReasonIsNull() {
            addCriterion("FAIL_REASON is null");
            return this;
        }

        public Criteria andFailReasonIsNotNull() {
            addCriterion("FAIL_REASON is not null");
            return this;
        }

        public Criteria andFailReasonEqualTo(String value) {
            addCriterion("FAIL_REASON =", value, "failReason");
            return this;
        }

        public Criteria andFailReasonNotEqualTo(String value) {
            addCriterion("FAIL_REASON <>", value, "failReason");
            return this;
        }

        public Criteria andFailReasonGreaterThan(String value) {
            addCriterion("FAIL_REASON >", value, "failReason");
            return this;
        }

        public Criteria andFailReasonGreaterThanOrEqualTo(String value) {
            addCriterion("FAIL_REASON >=", value, "failReason");
            return this;
        }

        public Criteria andFailReasonLessThan(String value) {
            addCriterion("FAIL_REASON <", value, "failReason");
            return this;
        }

        public Criteria andFailReasonLessThanOrEqualTo(String value) {
            addCriterion("FAIL_REASON <=", value, "failReason");
            return this;
        }

        public Criteria andFailReasonLike(String value) {
            addCriterion("FAIL_REASON like", value, "failReason");
            return this;
        }

        public Criteria andFailReasonNotLike(String value) {
            addCriterion("FAIL_REASON not like", value, "failReason");
            return this;
        }

        public Criteria andFailReasonIn(List values) {
            addCriterion("FAIL_REASON in", values, "failReason");
            return this;
        }

        public Criteria andFailReasonNotIn(List values) {
            addCriterion("FAIL_REASON not in", values, "failReason");
            return this;
        }

        public Criteria andFailReasonBetween(String value1, String value2) {
            addCriterion("FAIL_REASON between", value1, value2, "failReason");
            return this;
        }

        public Criteria andFailReasonNotBetween(String value1, String value2) {
            addCriterion("FAIL_REASON not between", value1, value2, "failReason");
            return this;
        }

        public Criteria andErrorDescIsNull() {
            addCriterion("ERROR_DESC is null");
            return this;
        }

        public Criteria andErrorDescIsNotNull() {
            addCriterion("ERROR_DESC is not null");
            return this;
        }

        public Criteria andErrorDescEqualTo(String value) {
            addCriterion("ERROR_DESC =", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescNotEqualTo(String value) {
            addCriterion("ERROR_DESC <>", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescGreaterThan(String value) {
            addCriterion("ERROR_DESC >", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescGreaterThanOrEqualTo(String value) {
            addCriterion("ERROR_DESC >=", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescLessThan(String value) {
            addCriterion("ERROR_DESC <", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescLessThanOrEqualTo(String value) {
            addCriterion("ERROR_DESC <=", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescLike(String value) {
            addCriterion("ERROR_DESC like", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescNotLike(String value) {
            addCriterion("ERROR_DESC not like", value, "errorDesc");
            return this;
        }

        public Criteria andErrorDescIn(List values) {
            addCriterion("ERROR_DESC in", values, "errorDesc");
            return this;
        }

        public Criteria andErrorDescNotIn(List values) {
            addCriterion("ERROR_DESC not in", values, "errorDesc");
            return this;
        }

        public Criteria andErrorDescBetween(String value1, String value2) {
            addCriterion("ERROR_DESC between", value1, value2, "errorDesc");
            return this;
        }

        public Criteria andErrorDescNotBetween(String value1, String value2) {
            addCriterion("ERROR_DESC not between", value1, value2, "errorDesc");
            return this;
        }

        public Criteria andIsDisposeIsNull() {
            addCriterion("IS_DISPOSE is null");
            return this;
        }

        public Criteria andIsDisposeIsNotNull() {
            addCriterion("IS_DISPOSE is not null");
            return this;
        }

        public Criteria andIsDisposeEqualTo(String value) {
            addCriterion("IS_DISPOSE =", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeNotEqualTo(String value) {
            addCriterion("IS_DISPOSE <>", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeGreaterThan(String value) {
            addCriterion("IS_DISPOSE >", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeGreaterThanOrEqualTo(String value) {
            addCriterion("IS_DISPOSE >=", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeLessThan(String value) {
            addCriterion("IS_DISPOSE <", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeLessThanOrEqualTo(String value) {
            addCriterion("IS_DISPOSE <=", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeLike(String value) {
            addCriterion("IS_DISPOSE like", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeNotLike(String value) {
            addCriterion("IS_DISPOSE not like", value, "isDispose");
            return this;
        }

        public Criteria andIsDisposeIn(List values) {
            addCriterion("IS_DISPOSE in", values, "isDispose");
            return this;
        }

        public Criteria andIsDisposeNotIn(List values) {
            addCriterion("IS_DISPOSE not in", values, "isDispose");
            return this;
        }

        public Criteria andIsDisposeBetween(String value1, String value2) {
            addCriterion("IS_DISPOSE between", value1, value2, "isDispose");
            return this;
        }

        public Criteria andIsDisposeNotBetween(String value1, String value2) {
            addCriterion("IS_DISPOSE not between", value1, value2, "isDispose");
            return this;
        }

        public Criteria andTotalBalanceDivergenceIsNull() {
            addCriterion("TOTAL_BALANCE_DIVERGENCE is null");
            return this;
        }

        public Criteria andTotalBalanceDivergenceIsNotNull() {
            addCriterion("TOTAL_BALANCE_DIVERGENCE is not null");
            return this;
        }

        public Criteria andTotalBalanceDivergenceEqualTo(BigDecimal value) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE =", value, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceNotEqualTo(BigDecimal value) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE <>", value, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceGreaterThan(BigDecimal value) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE >", value, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE >=", value, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceLessThan(BigDecimal value) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE <", value, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE <=", value, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceIn(List values) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE in", values, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceNotIn(List values) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE not in", values, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE between", value1, value2, "totalBalanceDivergence");
            return this;
        }

        public Criteria andTotalBalanceDivergenceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_BALANCE_DIVERGENCE not between", value1, value2, "totalBalanceDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceIsNull() {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE is null");
            return this;
        }

        public Criteria andRechargeAmountDivergenceIsNotNull() {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE is not null");
            return this;
        }

        public Criteria andRechargeAmountDivergenceEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE =", value, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceNotEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE <>", value, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceGreaterThan(BigDecimal value) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE >", value, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE >=", value, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceLessThan(BigDecimal value) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE <", value, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE <=", value, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceIn(List values) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE in", values, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceNotIn(List values) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE not in", values, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE between", value1, value2, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andRechargeAmountDivergenceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECHARGE_AMOUNT_DIVERGENCE not between", value1, value2, "rechargeAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceIsNull() {
            addCriterion("Out_AMOUNT_DIVERGENCE is null");
            return this;
        }

        public Criteria andOutAmountDivergenceIsNotNull() {
            addCriterion("Out_AMOUNT_DIVERGENCE is not null");
            return this;
        }

        public Criteria andOutAmountDivergenceEqualTo(BigDecimal value) {
            addCriterion("Out_AMOUNT_DIVERGENCE =", value, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceNotEqualTo(BigDecimal value) {
            addCriterion("Out_AMOUNT_DIVERGENCE <>", value, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceGreaterThan(BigDecimal value) {
            addCriterion("Out_AMOUNT_DIVERGENCE >", value, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("Out_AMOUNT_DIVERGENCE >=", value, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceLessThan(BigDecimal value) {
            addCriterion("Out_AMOUNT_DIVERGENCE <", value, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("Out_AMOUNT_DIVERGENCE <=", value, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceIn(List values) {
            addCriterion("Out_AMOUNT_DIVERGENCE in", values, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceNotIn(List values) {
            addCriterion("Out_AMOUNT_DIVERGENCE not in", values, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Out_AMOUNT_DIVERGENCE between", value1, value2, "outAmountDivergence");
            return this;
        }

        public Criteria andOutAmountDivergenceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Out_AMOUNT_DIVERGENCE not between", value1, value2, "outAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceIsNull() {
            addCriterion("IN_AMOUNT_DIVERGENCE is null");
            return this;
        }

        public Criteria andInAmountDivergenceIsNotNull() {
            addCriterion("IN_AMOUNT_DIVERGENCE is not null");
            return this;
        }

        public Criteria andInAmountDivergenceEqualTo(BigDecimal value) {
            addCriterion("IN_AMOUNT_DIVERGENCE =", value, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceNotEqualTo(BigDecimal value) {
            addCriterion("IN_AMOUNT_DIVERGENCE <>", value, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceGreaterThan(BigDecimal value) {
            addCriterion("IN_AMOUNT_DIVERGENCE >", value, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("IN_AMOUNT_DIVERGENCE >=", value, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceLessThan(BigDecimal value) {
            addCriterion("IN_AMOUNT_DIVERGENCE <", value, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("IN_AMOUNT_DIVERGENCE <=", value, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceIn(List values) {
            addCriterion("IN_AMOUNT_DIVERGENCE in", values, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceNotIn(List values) {
            addCriterion("IN_AMOUNT_DIVERGENCE not in", values, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IN_AMOUNT_DIVERGENCE between", value1, value2, "inAmountDivergence");
            return this;
        }

        public Criteria andInAmountDivergenceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("IN_AMOUNT_DIVERGENCE not between", value1, value2, "inAmountDivergence");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeIsNull() {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE is null");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeIsNotNull() {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE is not null");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE =", value, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeNotEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE <>", value, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeGreaterThan(BigDecimal value) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE >", value, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE >=", value, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeLessThan(BigDecimal value) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE <", value, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE <=", value, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeIn(List values) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE in", values, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeNotIn(List values) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE not in", values, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE between", value1, value2, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andRechargeRefuntAmountDivergeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECHARGE_REFUNT_AMOUNT_DIVERGE not between", value1, value2, "rechargeRefuntAmountDiverge");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceIsNull() {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE is null");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceIsNotNull() {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE is not null");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceEqualTo(BigDecimal value) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE =", value, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceNotEqualTo(BigDecimal value) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE <>", value, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceGreaterThan(BigDecimal value) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE >", value, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE >=", value, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceLessThan(BigDecimal value) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE <", value, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE <=", value, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceIn(List values) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE in", values, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceNotIn(List values) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE not in", values, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE between", value1, value2, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andTakeCashAmountDivergenceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TAKE_CASH_AMOUNT_DIVERGENCE not between", value1, value2, "takeCashAmountDivergence");
            return this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return this;
        }

        public Criteria andRemarkIn(List values) {
            addCriterion("REMARK in", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(List values) {
            addCriterion("REMARK not in", values, "remark");
            return this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return this;
        }
    }
}