package com.ctfo.upp.gatewayservice.util.yibao;

import java.util.HashMap;
import java.util.Map;

public class Constants {
	
	public final static Map<String, String> callBackFromYibaoCommandToBean = new HashMap<String, String>();
	static{
		callBackFromYibaoCommandToBean.put("RechargeCallBack", "com.ctfo.upp.gatewayservice.bean.yibao.callback.accountaccess.RechargeCallBackResponseYB");
		callBackFromYibaoCommandToBean.put("WithdrawCallBack", "com.ctfo.upp.gatewayservice.bean.yibao.callback.accountaccess.WithdrawCallBackResponseYB");
		callBackFromYibaoCommandToBean.put("CheckAccountCallBack", "com.ctfo.upp.gatewayservice.bean.yibao.callback.accountaccess.CheckAccountCallBackResponseYB");
		callBackFromYibaoCommandToBean.put("UnfreezeAccountCallBack", "com.ctfo.upp.gatewayservice.bean.yibao.callback.accountaccess.UnlockAccountCallBackResponseYB");
	}
	
	public final static Map<String, String> callBackToBusinessType = new HashMap<String, String>();
	static{
		callBackToBusinessType.put("CheckAccountCallBackResponseYB", "1");
		callBackToBusinessType.put("RechargeCallBackResponseYB", "2");
		callBackToBusinessType.put("UnlockAccountCallBackResponseYB", "3");
		callBackToBusinessType.put("WithdrawCallBackResponseYB", "4");
	}
	
	public final static Map<String, String> RechargeCallBackErrorCodes = new HashMap<String, String>();
	static{
		RechargeCallBackErrorCodes.put("0", "成功");
		RechargeCallBackErrorCodes.put("7", "卡面额与卡号卡密不一致");
		RechargeCallBackErrorCodes.put("1002", "本张卡密您提交过于频繁，请您稍后再试");
		RechargeCallBackErrorCodes.put("1003", "不支持的卡类型（比如电信地方卡）");
		RechargeCallBackErrorCodes.put("1004", "密码错误或充值卡无效");
		RechargeCallBackErrorCodes.put("1006", "该卡在同一天连续错误提交");
		RechargeCallBackErrorCodes.put("1007", "卡内余额不足");
		RechargeCallBackErrorCodes.put("1010", "此卡正在处理中");
		RechargeCallBackErrorCodes.put("10000", "未知错误");
		RechargeCallBackErrorCodes.put("2005", "此卡已使用");
		RechargeCallBackErrorCodes.put("2006", "卡密在系统处理中");
		RechargeCallBackErrorCodes.put("2007", "该卡为假卡");
		RechargeCallBackErrorCodes.put("2008", "该卡种正在维护");
		RechargeCallBackErrorCodes.put("2009", "浙江省移动维护");
		RechargeCallBackErrorCodes.put("2010", "江苏省移动维护");
		RechargeCallBackErrorCodes.put("2011", "福建省移动维护");
		RechargeCallBackErrorCodes.put("2012", "辽宁省移动维护");
		RechargeCallBackErrorCodes.put("3001", "卡不存在");
		RechargeCallBackErrorCodes.put("3002", "卡已使用过");
		RechargeCallBackErrorCodes.put("3003", "卡已作废");
		RechargeCallBackErrorCodes.put("3004", "卡已冻结");
		RechargeCallBackErrorCodes.put("3005", "卡未激活");
		RechargeCallBackErrorCodes.put("3006", "密码不正确");
		RechargeCallBackErrorCodes.put("3007", "卡正在处理中");
		RechargeCallBackErrorCodes.put("3101", "系统错误");
		RechargeCallBackErrorCodes.put("3102", "卡已过期");
	}
	
	public final static Map<String, String> ErrorCodes = new HashMap<String, String>();
	static{
		ErrorCodes.put("0", "失败");
		ErrorCodes.put("1", "成功");
		ErrorCodes.put("-1", "签名校验失败或未知错误");
		ErrorCodes.put("2", "卡密成功处理过或者提交卡号过于频繁");
		ErrorCodes.put("5", "卡数量过多，目前最多支持10张卡");
		ErrorCodes.put("11", "订单号重复");
		ErrorCodes.put("66", "支付金额有误");
		ErrorCodes.put("95", "支付方式未开通");
		ErrorCodes.put("112", "业务状态不可用，未开通此类卡业务");
		ErrorCodes.put("8001", "卡面额组填写错误");
		ErrorCodes.put("8002", "卡号密码为空或者数量不相等（使用组合支付时）");
		ErrorCodes.put("0001", "数据库错误");
		ErrorCodes.put("0002", "输入参数错误");
		ErrorCodes.put("1001", "可用余额不足");
		ErrorCodes.put("1002", "参数验证失败");
		ErrorCodes.put("1003", "资金账户不存在");
		ErrorCodes.put("1004", "账户状态异常");
		ErrorCodes.put("1005", "账户类型错误");
		ErrorCodes.put("1006", "超过单笔支付限额");
		ErrorCodes.put("1007", "超过日交易限额");
		ErrorCodes.put("1008", "超过月交易限额");
		ErrorCodes.put("1009", "可提现余额不足");
		ErrorCodes.put("1010", "账户已存在");
		ErrorCodes.put("1011", "账户余额不为零");
		ErrorCodes.put("1012", "账户余额被篡改");
		ErrorCodes.put("1013", "交易金额错误");
		ErrorCodes.put("1014", "账户自动解冻时间错误");
		ErrorCodes.put("1015", "账户不允许出款");
		ErrorCodes.put("1016", "账户不允许入款");
		ErrorCodes.put("2001", "用户不存在");
		ErrorCodes.put("2002", "用户未实名认证");
		ErrorCodes.put("2003", "商户不存在");
		ErrorCodes.put("2004", "用户已经存在");
		ErrorCodes.put("3001", "交易数据同步异常");
		ErrorCodes.put("3002", "账户数据同步异常");
		ErrorCodes.put("3003", "数据格式异常");
		ErrorCodes.put("3004", "对账金额不一致");
		ErrorCodes.put("3005", "同步日期与交易日期不一致");
		ErrorCodes.put("4001", "错误的调账类型");
		ErrorCodes.put("4002", "调账过程生成账户记录错误");
		ErrorCodes.put("4003", "用户账户状态错误");
		ErrorCodes.put("4004", "用户已被冻结");
		ErrorCodes.put("4005", "用户不存在");
		ErrorCodes.put("4006", "账户不支持充值");
		ErrorCodes.put("4007", "充值超过单笔限额");
		ErrorCodes.put("4008", "充值记录状态错误");
		ErrorCodes.put("4009", "完成充值验证返回金额与初始金额不一致");
		ErrorCodes.put("4010", "充退原充值记录不存在");
		ErrorCodes.put("4011", "原交易未支付成功");
		ErrorCodes.put("4012", "非银行卡充值不支持充退");
		ErrorCodes.put("4013", "充退次数超限");
		ErrorCodes.put("4014", "一天内充退次数超过一次");
		ErrorCodes.put("4015", "充退总金额超过原金额");
		ErrorCodes.put("4016", "不支持三个月前的充值订单退款");
		ErrorCodes.put("4017", "退款已经成功");
		ErrorCodes.put("4018", "商家订单号重复");
		ErrorCodes.put("4019", "hmac校验失败");
		ErrorCodes.put("4020", "验证业务类型失败");
		ErrorCodes.put("4021", "与充值记录里用户业务账号不一致");
		ErrorCodes.put("4022", "与充值记录里金额不一致");
		ErrorCodes.put("4023", "入账状态错误");
		ErrorCodes.put("4024", "账户交易订单已存在");
		ErrorCodes.put("4025", "账户交易订单已入账");
		ErrorCodes.put("4026", "充值记录状态异常");
		ErrorCodes.put("4027", "提现卡冻结");
		ErrorCodes.put("4028", "查询提现结果返回订单号不一致");
		ErrorCodes.put("4029", "错误的充值来源");
		ErrorCodes.put("4030", "清算账户代扣充值失败");
		ErrorCodes.put("4031", "提现卡不存在");
		ErrorCodes.put("4034", "提现撤销订单号已经存在");
		ErrorCodes.put("4035", "提现撤销日期与交易日期不一致");
		ErrorCodes.put("4036", "提现订单号不存在");
		ErrorCodes.put("5001", "请求流水号已存在");
		ErrorCodes.put("5002", "认证记录不存在");
		ErrorCodes.put("5003", "认证记录状态异常");
		ErrorCodes.put("5004", "打款状态异常");
		ErrorCodes.put("5005", "打款记录不存在");
		ErrorCodes.put("5006", "打款认证异常");
		ErrorCodes.put("5007", "认证子系统异常");
		ErrorCodes.put("5008", "不支持的银行");
		ErrorCodes.put("5009", "确认金额异常");
		ErrorCodes.put("5010", "开通服务异常");
		ErrorCodes.put("5011", "客户不存在");
		ErrorCodes.put("501", "认证成功");
		ErrorCodes.put("500", "认证失败");
		ErrorCodes.put("503", "重复认证");
	}
	
	public final static Map<String, String> certifyBankCode = new HashMap<String, String>();
	static{
		certifyBankCode.put("SDB", "深圳发展银行");
		certifyBankCode.put("CCB", "建设银行");
		certifyBankCode.put("CIB", "兴业银行");
		certifyBankCode.put("CMBC", "中国民生银行");
		certifyBankCode.put("BOCO", "交通银行");
		certifyBankCode.put("ABC", "中国农业银行");
		certifyBankCode.put("POST", "中国邮政储蓄");
		certifyBankCode.put("SPDB", "上海浦东发展银行");
		certifyBankCode.put("CMBCHINA", "招商银行");
		certifyBankCode.put("CEB", "中国光大银行");
		certifyBankCode.put("SZCB", "平安银行");
		certifyBankCode.put("ECITIC", "中信银行");
	}
	
	public final static Map<String, String> rechargeBankChannel = new HashMap<String, String>();
	static{
		rechargeBankChannel.put("ICBC-NET-B2C", "工商银行");
		rechargeBankChannel.put("CMBCHINA-NET-B2C", "招商银行");
		rechargeBankChannel.put("ABC-NET-B2C", "中国农业银行");
		rechargeBankChannel.put("CCB-NET-B2C", "建设银行");
		rechargeBankChannel.put("BCCB-NET-B2C", "北京银行");
		rechargeBankChannel.put("BOCO-NET-B2C", "交通银行");
		rechargeBankChannel.put("CIB-NET-B2C", "兴业银行");
		rechargeBankChannel.put("NJCB-NET-B2C", "南京银行");
		rechargeBankChannel.put("CMBC-NET-B2C", "中国民生银行");
		rechargeBankChannel.put("CEB-NET-B2C", "光大银行");
		rechargeBankChannel.put("BOC-NET-B2C", "中国银行");
		rechargeBankChannel.put("PINGANBANK-NET", "平安银行");
		rechargeBankChannel.put("CBHB-NET-B2C", "渤海银行");
		rechargeBankChannel.put("HKBEA-NET-B2C", "东亚银行");
		rechargeBankChannel.put("NBCB-NET-B2C", "宁波银行");
		rechargeBankChannel.put("ECITIC-NET-B2C", "中信银行");
		rechargeBankChannel.put("SDB-NET-B2C", "深圳发展银行");
		rechargeBankChannel.put("GDB-NET-B2C", "广发银行");
		rechargeBankChannel.put("SHB-NET-B2C", "上海银行");
		rechargeBankChannel.put("SPDB-NET-B2C", "上海浦东发展银行");
		rechargeBankChannel.put("POST-NET-B2C", "中国邮政");
		rechargeBankChannel.put("BJRCB-NET-B2C", "北京农村商业银行");
		rechargeBankChannel.put("HXB-NET-B2C", "华夏银行");
		rechargeBankChannel.put("CZ-NET-B2C", "浙商银行");
		rechargeBankChannel.put("HZBANK-NET-B2C", "杭州银行");
		rechargeBankChannel.put("SRCB-NET-B2C", "上海农商银行");
		rechargeBankChannel.put("NCBBANK-NET-B2C", "南洋商业银行");
		rechargeBankChannel.put("SCCB-NET-B2C", "河北银行");
		rechargeBankChannel.put("ZJTLCB-NET-B2C", "泰隆银行");
		rechargeBankChannel.put("PINGANBANK-NET-B2C", "平安银行");
		rechargeBankChannel.put("CEB-KUAIDEBIT", "光大银行快捷支付（借记卡）");
		rechargeBankChannel.put("SPDB-KUAIDEBIT", "上海浦东发展银行快捷支付（借记卡）");
		rechargeBankChannel.put("JUNNET", "骏网一卡通");
		rechargeBankChannel.put("SNDACARD", "盛大卡");
		rechargeBankChannel.put("SZX", "神州行");
		rechargeBankChannel.put("ZHENGTU", "征途卡");
		rechargeBankChannel.put("QQCARD", "Q币卡");
		rechargeBankChannel.put("UNICOM", "联通卡");
		rechargeBankChannel.put("JIUYOU", "久游卡");
		rechargeBankChannel.put("YPCARD", "易宝e卡通");
		rechargeBankChannel.put("NETEASE", "网易卡");
		rechargeBankChannel.put("WANMEI", "完美卡");
		rechargeBankChannel.put("SOHU", "搜狐卡");
		rechargeBankChannel.put("TELECOM", "电信卡");
		rechargeBankChannel.put("ICBC-WAP", "工商银行WAP");
		rechargeBankChannel.put("CMBCHINA-WAP", "招商银行WAP");
		rechargeBankChannel.put("CCB-PHONE", "建设银行WAP");
	}
	
	public final static Map<String, String> EntrustSettleReturnCode = new HashMap<String, String>();
	static{
		EntrustSettleReturnCode.put("1","请求成功");
		EntrustSettleReturnCode.put("2001","没有证书");
		EntrustSettleReturnCode.put("2002","登录名和证书不匹配");
		EntrustSettleReturnCode.put("2003","证书用户名格式错误");
		EntrustSettleReturnCode.put("2004","证书起始日志格式错误");
		EntrustSettleReturnCode.put("2005","证书截止日期格式错误");
		EntrustSettleReturnCode.put("2006","证书序列号格式错误");
		EntrustSettleReturnCode.put("2008","证书已过期");
		EntrustSettleReturnCode.put("2009","证书验证失败");
		EntrustSettleReturnCode.put("0010","总金额与明细合计有误");
		EntrustSettleReturnCode.put("0011","总比数与明细合计有误");
		EntrustSettleReturnCode.put("0012","商户ip不合法（ip位于黑名单）");
		EntrustSettleReturnCode.put("0013","商户ip不匹配或者商户ip不合法");
		EntrustSettleReturnCode.put("0014","打款文件已处理，请勿重复提交");
		EntrustSettleReturnCode.put("0015","存在重复打款记录");
		EntrustSettleReturnCode.put("0016","签名验证失败");
		EntrustSettleReturnCode.put("0017","打款总额超限");
		EntrustSettleReturnCode.put("0018","打款总笔数超限");
		EntrustSettleReturnCode.put("0019","单笔限额超限");
		EntrustSettleReturnCode.put("0020","商户不存在");
		EntrustSettleReturnCode.put("0021","商户状态不正常");
		EntrustSettleReturnCode.put("0022","收款卡号有误（或者卡号在系统黑名单中）");
		EntrustSettleReturnCode.put("0023","打款单笔处理处理失败");
		EntrustSettleReturnCode.put("0031","省市有误");
		EntrustSettleReturnCode.put("0032","未开通操作权限（批量打款，查询）");
		EntrustSettleReturnCode.put("0033","CA证书有误");
		EntrustSettleReturnCode.put("0034","批次号不合法或重复");
		EntrustSettleReturnCode.put("0035","订单号不合法或重复");
		EntrustSettleReturnCode.put("0036","不支持该银行编码和银行名称");
		EntrustSettleReturnCode.put("0037","金额不合法");
		EntrustSettleReturnCode.put("0038","非法的账户名称");
		EntrustSettleReturnCode.put("0039","手续费收取方式不合法");
		EntrustSettleReturnCode.put("0040","邮箱格式不正确");
		EntrustSettleReturnCode.put("0041","非法的手机号");
		EntrustSettleReturnCode.put("0042","留言字数超过限制");
		EntrustSettleReturnCode.put("0043","加急参数非法或者不支持该银行的加急出款");
		EntrustSettleReturnCode.put("0044","商户未开启委托结算功能");
		EntrustSettleReturnCode.put("0045","商户账户已冻结");
		EntrustSettleReturnCode.put("0046","商户可用打款余额不足");
		EntrustSettleReturnCode.put("0047","请求报文xml格式有误");
		EntrustSettleReturnCode.put("0048","查询记录不存在");
		EntrustSettleReturnCode.put("0049","输入页码为0或未输入");
		EntrustSettleReturnCode.put("0051","必填项不能为空");
		EntrustSettleReturnCode.put("0052","日期转换错误");
		EntrustSettleReturnCode.put("0053","数据签名失败");
		EntrustSettleReturnCode.put("0054","时间段或批次号至少添一项");
		EntrustSettleReturnCode.put("0055","查询日期不能在当前日期之后");
		EntrustSettleReturnCode.put("0056","未开通结算款汇入");
		EntrustSettleReturnCode.put("0057","请求xml报文里的cmd参数为空");
		EntrustSettleReturnCode.put("0058","参数必填项，不能为空");
		EntrustSettleReturnCode.put("0059","日期格式不合法");
		EntrustSettleReturnCode.put("0060","is_Repay参数不合法");
		EntrustSettleReturnCode.put("0061","参数不合法");
		EntrustSettleReturnCode.put("0062","起始日期不能大于结束日期");
		EntrustSettleReturnCode.put("0063","时间间隔不能超过7天");
		EntrustSettleReturnCode.put("0064","商户未开通交易限额业务");
		EntrustSettleReturnCode.put("0066","金额超过打款单笔限额");
		EntrustSettleReturnCode.put("0067","日累计限额超过日限额");
		EntrustSettleReturnCode.put("0068","月累计限额超过月限额");
		EntrustSettleReturnCode.put("0069","接口名称不存在");
		EntrustSettleReturnCode.put("0070","该商户关系不存在");
		EntrustSettleReturnCode.put("0071","该机构无下级机构");
		EntrustSettleReturnCode.put("0074","报文非法");
		EntrustSettleReturnCode.put("0075","支行信息和省市信息不能同时为空");
		EntrustSettleReturnCode.put("0076","全部打款记录未通过校验");
		EntrustSettleReturnCode.put("0077","不支持该银行对公打款");
		EntrustSettleReturnCode.put("0078","bank_Code和bank_Name不能同时为空");
		EntrustSettleReturnCode.put("0079","金额不足以支付手续费");
		EntrustSettleReturnCode.put("0080","未开通周转易");
		EntrustSettleReturnCode.put("0081","未开通周转易");
		EntrustSettleReturnCode.put("0082","未开通对公出款");
		EntrustSettleReturnCode.put("0083","未开通对私出款");
		EntrustSettleReturnCode.put("0084","重复预约");
		EntrustSettleReturnCode.put("0085","非预约期");
		EntrustSettleReturnCode.put("0086","超过预约额度或易宝备款金额，不能实时出款");
		EntrustSettleReturnCode.put("0087","账户非法或余额不足预约缴费失败");
		EntrustSettleReturnCode.put("0088","预约金额超限");
		EntrustSettleReturnCode.put("0089","未预约");
		EntrustSettleReturnCode.put("0090","已缴费不能修改");
		EntrustSettleReturnCode.put("0091","当前时间不可预约");
		EntrustSettleReturnCode.put("0092","账户余额不足");
		EntrustSettleReturnCode.put("0093","此银行额度不足，建议切换其它银行");
		EntrustSettleReturnCode.put("0095","开户行所在省不能为空或不合法");
		EntrustSettleReturnCode.put("0096","开户行所在市不能为空或不合法");
		EntrustSettleReturnCode.put("0097","开户银行不能为空");
		EntrustSettleReturnCode.put("0098","开户银行不合法");
		EntrustSettleReturnCode.put("0099","开户银行全称不合法");
		EntrustSettleReturnCode.put("0100","开户银行全称不能为空");
		EntrustSettleReturnCode.put("1001","未开通日结通");
		EntrustSettleReturnCode.put("1002","出款银行卡号非绑定银行卡");
		EntrustSettleReturnCode.put("1003","代理商额度不足");
		EntrustSettleReturnCode.put("1004","日结通总额度不足");
		EntrustSettleReturnCode.put("1005","日结通对私额度不足");
		EntrustSettleReturnCode.put("1006","收款方银行为非实时到账银行");
		EntrustSettleReturnCode.put("1007","未开通非工作日加急版");
		EntrustSettleReturnCode.put("1008","未开通工作日加急版");
		EntrustSettleReturnCode.put("1009","未开通非工作日普通版");
		EntrustSettleReturnCode.put("1010","未开通工作日普通版");
		EntrustSettleReturnCode.put("1011","打款状态码不合法");
		EntrustSettleReturnCode.put("9999","系统异常");
	}
	
	public final static Map<String, String> PostMoneyCode = new HashMap<String, String>();
	static{
		PostMoneyCode.put("0025","打款结果：已接收");
		PostMoneyCode.put("0026","打款结果：已汇出");
		PostMoneyCode.put("0027","打款结果：已退款");
		PostMoneyCode.put("0028","打款结果：已拒绝");
		PostMoneyCode.put("0029","打款结果：待审核");
		PostMoneyCode.put("0030","打款结果：未知");
	}
	
	public final static Map<String, String> BankManageResultCode = new HashMap<String, String>();
	static{
		BankManageResultCode.put("S","已成功");
		BankManageResultCode.put("I","银行处理中");
		BankManageResultCode.put("F","出款失败，原因见打款明细查询fail_Desc");
		BankManageResultCode.put("W","未出款");
		BankManageResultCode.put("U","未知");
	}
}
